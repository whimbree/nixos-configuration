version: "3.9"
services:
  wireguard-incognito:
    image: ghcr.io/linuxserver/wireguard
    container_name: wireguard-incognito
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1420
      - PGID=1420
      - TZ=America/New_York
    volumes:
      - /services/incognito/wireguard:/config:Z
      - /lib/modules:/lib/modules:ro
    networks:
      - incognito
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
    restart: unless-stopped
    depends_on: # wait on these containers to connect by hostname
      - invidious-db
    healthcheck:
      test: curl --fail https://am.i.mullvad.net/connected | grep "You are connected to Mullvad" || exit 1
      interval: 30s
      retries: 10
      start_period: 10s
      timeout: 2s
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=incognito"
      # Quetre
      - "traefik.http.routers.quetre.rule=Host(`quetre.bspwr.com`)"
      - "traefik.http.routers.quetre.entrypoints=websecure"
      - "traefik.http.routers.quetre.tls=true"
      - "traefik.http.routers.quetre.tls.certresolver=letsencrypt"
      - "traefik.http.routers.quetre.service=quetre"
      - "traefik.http.routers.quetre.middlewares=default@file"
      - "traefik.http.services.quetre.loadbalancer.server.port=7070"
      # Rimgo
      - "traefik.http.routers.rimgo.rule=Host(`rimgo.bspwr.com`)"
      - "traefik.http.routers.rimgo.entrypoints=websecure"
      - "traefik.http.routers.rimgo.tls=true"
      - "traefik.http.routers.rimgo.tls.certresolver=letsencrypt"
      - "traefik.http.routers.rimgo.service=rimgo"
      - "traefik.http.routers.rimgo.middlewares=default@file"
      - "traefik.http.services.rimgo.loadbalancer.server.port=6060"
      # I2P HTTP Proxy (Web Console)
      - "traefik.http.routers.i2p-http-proxy.rule=Host(`i2pconsole.local.bspwr.com`)"
      - "traefik.http.routers.i2p-http-proxy.entrypoints=websecure"
      - "traefik.http.routers.i2p-http-proxy.tls=true"
      - "traefik.http.routers.i2p-http-proxy.tls.certresolver=letsencrypt"
      - "traefik.http.routers.i2p-http-proxy.service=i2p-http-proxy"
      - "traefik.http.routers.i2p-http-proxy.middlewares=local-allowlist@file, default@file"
      - "traefik.http.services.i2p-http-proxy.loadbalancer.server.port=7657"
      # I2P HTTP Proxy (TCP)
      - "traefik.tcp.routers.i2p-http-proxy.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.i2p-http-proxy.entrypoints=i2p-proxy"
      - "traefik.tcp.routers.i2p-http-proxy.tls=false"
      - "traefik.tcp.routers.i2p-http-proxy.service=i2p-http-proxy"
      - "traefik.tcp.services.i2p-http-proxy.loadbalancer.server.port=4444"
      # TOR SOCKS Proxy (TCP)
      - "traefik.tcp.routers.tor-socks-proxy.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.tor-socks-proxy.entrypoints=tor-proxy"
      - "traefik.tcp.routers.tor-socks-proxy.tls=false"
      - "traefik.tcp.routers.tor-socks-proxy.service=tor-socks-proxy"
      - "traefik.tcp.services.tor-socks-proxy.loadbalancer.server.port=9150"
      # Monerod (TCP)
      - "traefik.tcp.routers.monerod.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.monerod.entrypoints=monero-node"
      - "traefik.tcp.routers.monerod.tls=false"
      - "traefik.tcp.routers.monerod.service=monerod"
      - "traefik.tcp.services.monerod.loadbalancer.server.port=18089"

  privoxy: # 8118
    build: ./privoxy
    container_name: privoxy
    restart: unless-stopped
    volumes:
      - /services/incognito/privoxy:/etc/privoxy
    depends_on:
      - wireguard-incognito
    network_mode: service:wireguard-incognito
    healthcheck:
      test: wget -qO- --no-verbose --tries=1 https://am.i.mullvad.net/connected | grep "You are connected to Mullvad" || exit 1
      interval: 30s
      retries: 10
      start_period: 10s
      timeout: 2s

  # VPN Port Opened: 54839
  i2p-http-proxy: # 4444
    image: geti2p/i2p
    container_name: i2p-http-proxy
    volumes:
      - /services/incognito/i2pconfig:/i2p/.i2p
      - /services/incognito/i2psnark:/i2psnark
    restart: unless-stopped
    depends_on:
      - wireguard-incognito
    network_mode: service:wireguard-incognito
    healthcheck:
      test: wget -qO- --no-verbose --tries=1 localhost:7657 || exit 1
      interval: 10s
      retries: 6
      start_period: 10s
      timeout: 2s

  tor-socks-proxy: # 9050
    image: peterdavehello/tor-socks-proxy
    container_name: tor-socks-proxy
    restart: unless-stopped
    depends_on:
      - wireguard-incognito
    network_mode: service:wireguard-incognito
    healthcheck:
      test: wget -qO- --no-verbose --tries=1 https://am.i.mullvad.net/connected | grep "You are connected to Mullvad" || exit 1
      interval: 30s
      retries: 10
      start_period: 10s
      timeout: 2s

  # VPN Port Opened: 56366
  monerod:
    image: sethsimmons/simple-monerod:v0.18.1.2
    container_name: monerod
    user: ${FIXUID:-1420}:${FIXGID:-1420}
    volumes:
      - /ocean/services/monerod:/home/monero
    depends_on:
      - wireguard-incognito
    network_mode: service:wireguard-incognito
    restart: unless-stopped
    command: --p2p-external-port=56366 --rpc-restricted-bind-ip=0.0.0.0  --rpc-restricted-bind-port=18089 --no-igd --no-zmq --enable-dns-blocklist
    healthcheck:
      test: curl --fail http://localhost:18081/get_info || exit 1
      interval: 30s
      retries: 10
      start_period: 10m
      timeout: 30s

  teddit:
    container_name: teddit
    image: teddit/teddit:latest
    environment:
      - DOMAIN=teddit.bspwr.com
      - USE_HELMET=true
      - USE_HELMET_HSTS=true
      - TRUST_PROXY=true
      - REDIS_HOST=teddit-redis
      - HTTP_PROXY=http://wireguard-incognito:8118
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget" ,"--no-verbose", "--tries=1", "--spider", "http://localhost:8080/about"]
      interval: 1m
      timeout: 3s
    depends_on:
      - teddit-redis
    networks:
      - incognito
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=incognito"
      - "traefik.http.routers.teddit.rule=Host(`teddit.bspwr.com`)"
      - "traefik.http.routers.teddit.entrypoints=websecure"
      - "traefik.http.routers.teddit.tls=true"
      - "traefik.http.routers.teddit.tls.certresolver=letsencrypt"
      - "traefik.http.routers.teddit.service=teddit"
      - "traefik.http.routers.teddit.middlewares=default@file"
      - "traefik.http.services.teddit.loadbalancer.server.port=8080"

  teddit-redis:
    container_name: teddit-redis
    image: redis:6.2.5-alpine
    restart: unless-stopped
    command: redis-server
    environment:
      - REDIS_REPLICATION_MODE=master
    volumes:
      - /services/incognito/teddit-redis:/data
    networks:
      - incognito
    healthcheck:
      test: redis-cli ping
      interval: 30s
      timeout: 5s
      retries: 5

  invidious:
    image: quay.io/invidious/invidious:latest
    container_name: invidious
    restart: unless-stopped
    environment:
      # Please read the following file for a comprehensive list of all available
      # configuration options and their associated syntax:
      # https://github.com/iv-org/invidious/blob/master/config/config.example.yml
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: kemal
          password: kemal
          host: invidious-db
          port: 5432
        check_tables: true
        local: false
    healthcheck:
      test: (wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw && wget -qO- --no-verbose --tries=1 https://google.com) || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - incognito
    depends_on:
      - invidious-db
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=incognito"
      - "traefik.http.routers.invidious.rule=Host(`invidious.bspwr.com`)"
      - "traefik.http.routers.invidious.entrypoints=websecure"
      - "traefik.http.routers.invidious.tls=true"
      - "traefik.http.routers.invidious.tls.certresolver=letsencrypt"
      - "traefik.http.routers.invidious.service=invidious"
      - "traefik.http.routers.invidious.middlewares=default@file"
      - "traefik.http.services.invidious.loadbalancer.server.port=3000"

  invidious-db:
    image: docker.io/library/postgres:14
    container_name: invidious-db
    restart: unless-stopped
    networks:
    - incognito
    volumes:
      - /services/incognito/invidious-db/data:/var/lib/postgresql/data
      - /services/incognito/invidious/config/sql:/config/sql
      - /services/incognito/invidious/docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: kemal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]

  nitter: # 8080
    image: zedeus/nitter:latest
    container_name: nitter
    volumes:
      - /services/incognito/nitter/nitter.conf:/src/nitter.conf:ro
    depends_on:
      - nitter-redis
    restart: unless-stopped
    networks:
      - incognito
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:8080/Jack/status/20 || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=incognito"
      - "traefik.http.routers.nitter.rule=Host(`nitter.bspwr.com`)"
      - "traefik.http.routers.nitter.entrypoints=websecure"
      - "traefik.http.routers.nitter.tls=true"
      - "traefik.http.routers.nitter.tls.certresolver=letsencrypt"
      - "traefik.http.routers.nitter.service=nitter"
      - "traefik.http.routers.nitter.middlewares=default@file"
      - "traefik.http.services.nitter.loadbalancer.server.port=8080"

  nitter-redis:
    image: redis:6.2.5-alpine
    container_name: nitter-redis
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - /services/incognito/nitter-redis:/data
    restart: unless-stopped
    networks:
      - incognito
    healthcheck:
      test: redis-cli ping
      interval: 30s
      timeout: 5s
      retries: 5

  quetre:
    container_name: quetre
    image: codeberg.org/video-prize-ranch/quetre:latest
    restart: unless-stopped
    environment:
      - "NODE_ENV=production"
      - "PORT=7070"
    depends_on:
      - wireguard-incognito
    network_mode: service:wireguard-incognito
    healthcheck:
      test: wget -qO- --no-verbose --tries=1 localhost:7070 || exit 1
      interval: 30s
      timeout: 5s
      retries: 5

  rimgo:
    container_name: rimgo
    image: codeberg.org/video-prize-ranch/rimgo
    environment:
      - "PORT=6060"
    restart: unless-stopped
    depends_on:
      - wireguard-incognito
    network_mode: service:wireguard-incognito

  proxitok: # 80
    container_name: proxitok
    image: ghcr.io/pablouser1/proxitok:master
    environment:
      - LATTE_CACHE=/cache
      - API_CACHE=redis
      - REDIS_HOST=proxitok-redis
      - REDIS_PORT=6379
      - API_SIGNER=remote
      - API_SIGNER_URL=http://proxitok-signer:8080/signature
      - PROXY_HOST=http://wireguard-incognito
      - PROXY_PORT=8118
    depends_on:
      - proxitok-redis
      - proxitok-signer
    networks:
      - incognito
    restart: unless-stopped
    healthcheck:
      test: curl --fail localhost:80 || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=incognito"
      - "traefik.http.routers.proxitok.rule=Host(`proxitok.bspwr.com`)"
      - "traefik.http.routers.proxitok.entrypoints=websecure"
      - "traefik.http.routers.proxitok.tls=true"
      - "traefik.http.routers.proxitok.tls.certresolver=letsencrypt"
      - "traefik.http.routers.proxitok.service=proxitok"
      - "traefik.http.routers.proxitok.middlewares=default@file"
      - "traefik.http.services.proxitok.loadbalancer.server.port=80"

  proxitok-redis:
    container_name: proxitok-redis
    image: redis:7-alpine
    command: redis-server --save 60 1 --loglevel warning
    restart: unless-stopped
    volumes:
      - /services/incognito/proxitok/redis:/data
    networks:
      - incognito
    healthcheck:
      test: redis-cli ping
      interval: 30s
      timeout: 5s
      retries: 5
  proxitok-signer:
    container_name: proxitok-signer
    image: ghcr.io/pablouser1/signtok:master
    restart: unless-stopped
    networks:
      - incognito

networks:
  incognito:
    name: incognito
    external: true