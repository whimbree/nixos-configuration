version: "3.9"
services:
  wireguard-incognito:
    image: ghcr.io/linuxserver/wireguard
    container_name: wireguard-incognito
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1420
      - PGID=1420
      - TZ=America/New_York
    volumes:
      - /services/incognito/wireguard:/config:Z
      - /lib/modules:/lib/modules:ro
    networks:
      - incognito
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
    restart: unless-stopped
    healthcheck:
      test: curl --fail https://checkip.amazonaws.com | grep 185.195.233 || exit 1
      interval: 30s
      retries: 10
      start_period: 10s
      timeout: 2s
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=incognito"
      # Quetre
      - "traefik.http.routers.quetre.rule=Host(`quetre.bspwr.com`)"
      - "traefik.http.routers.quetre.entrypoints=websecure"
      - "traefik.http.routers.quetre.tls=true"
      - "traefik.http.routers.quetre.tls.certresolver=letsencrypt"
      - "traefik.http.routers.quetre.service=quetre"
      - "traefik.http.routers.quetre.middlewares=default@file"
      - "traefik.http.services.quetre.loadbalancer.server.port=7070"
      # Rimgo
      - "traefik.http.routers.rimgo.rule=Host(`rimgo.bspwr.com`)"
      - "traefik.http.routers.rimgo.entrypoints=websecure"
      - "traefik.http.routers.rimgo.tls=true"
      - "traefik.http.routers.rimgo.tls.certresolver=letsencrypt"
      - "traefik.http.routers.rimgo.service=rimgo"
      - "traefik.http.routers.rimgo.middlewares=default@file"
      - "traefik.http.services.rimgo.loadbalancer.server.port=6060"
      # I2P HTTP Proxy (Web Console)
      - "traefik.http.routers.i2p-http-proxy.rule=Host(`i2pconsole.local.bspwr.com`)"
      - "traefik.http.routers.i2p-http-proxy.entrypoints=websecure"
      - "traefik.http.routers.i2p-http-proxy.tls=true"
      - "traefik.http.routers.i2p-http-proxy.tls.certresolver=letsencrypt"
      - "traefik.http.routers.i2p-http-proxy.service=i2p-http-proxy"
      - "traefik.http.routers.i2p-http-proxy.middlewares=local-allowlist@file, default@file"
      - "traefik.http.services.i2p-http-proxy.loadbalancer.server.port=7657"
      # I2P HTTP Proxy (TCP)
      - "traefik.tcp.routers.i2p-http-proxy.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.i2p-http-proxy.entrypoints=i2p-proxy"
      - "traefik.tcp.routers.i2p-http-proxy.tls=false"
      - "traefik.tcp.routers.i2p-http-proxy.service=i2p-http-proxy"
      - "traefik.tcp.services.i2p-http-proxy.loadbalancer.server.port=4444"
      # TOR SOCKS Proxy (TCP)
      - "traefik.tcp.routers.tor-socks-proxy.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.tor-socks-proxy.entrypoints=tor-proxy"
      - "traefik.tcp.routers.tor-socks-proxy.tls=false"
      - "traefik.tcp.routers.tor-socks-proxy.service=tor-socks-proxy"
      - "traefik.tcp.services.tor-socks-proxy.loadbalancer.server.port=9150"
      # Monerod (TCP)
      - "traefik.tcp.routers.monerod.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.monerod.entrypoints=monero-node"
      - "traefik.tcp.routers.monerod.tls=false"
      - "traefik.tcp.routers.monerod.service=monerod"
      - "traefik.tcp.services.monerod.loadbalancer.server.port=18089"
      # Libreddit
      - "traefik.http.routers.libreddit.rule=Host(`libreddit.bspwr.com`)"
      - "traefik.http.routers.libreddit.entrypoints=websecure"
      - "traefik.http.routers.libreddit.tls=true"
      - "traefik.http.routers.libreddit.tls.certresolver=letsencrypt"
      - "traefik.http.routers.libreddit.service=libreddit"
      - "traefik.http.routers.libreddit.middlewares=default@file"
      - "traefik.http.services.libreddit.loadbalancer.server.port=8080"
      # Dependheal
      - "dependheal.enable=true"

  privoxy: # 8118
    image: ghcr.io/bspwr/privoxy:latest
    container_name: privoxy
    restart: unless-stopped
    volumes:
      - /services/incognito/privoxy:/etc/privoxy
    depends_on:
      - wireguard-incognito
    network_mode: service:wireguard-incognito
    healthcheck:
      test: wget -qO- --no-verbose --tries=1 https://checkip.amazonaws.com | grep 185.195.233 || exit 1
      interval: 30s
      retries: 10
      start_period: 10s
      timeout: 2s
    labels:
      - "dependheal.enable=true"
      - "dependheal.parent=wireguard-incognito"

  # VPN Port Opened: 54839
  i2p-http-proxy: # 4444
    image: docker.io/geti2p/i2p
    container_name: i2p-http-proxy
    volumes:
      - /services/incognito/i2pconfig:/i2p/.i2p
      - /services/incognito/i2psnark:/i2psnark
    restart: unless-stopped
    depends_on:
      - wireguard-incognito
    network_mode: service:wireguard-incognito
    healthcheck:
      test: wget -qO- --no-verbose --tries=1 localhost:7657 || exit 1
      interval: 10s
      retries: 6
      start_period: 10s
      timeout: 2s
    labels:
      - "dependheal.enable=true"
      - "dependheal.parent=wireguard-incognito"

  tor-socks-proxy: # 9050
    image: docker.io/peterdavehello/tor-socks-proxy
    container_name: tor-socks-proxy
    restart: unless-stopped
    depends_on:
      - wireguard-incognito
    network_mode: service:wireguard-incognito
    healthcheck:
      test: wget -qO- --no-verbose --tries=1 https://checkip.amazonaws.com | grep 185.195.233 || exit 1
      interval: 30s
      retries: 10
      start_period: 10s
      timeout: 2s
    labels:
      - "dependheal.enable=true"
      - "dependheal.parent=wireguard-incognito"

  # VPN Port Opened: 56366
  monerod:
    image: ghcr.io/sethforprivacy/simple-monerod:v0.18.2.2
    container_name: monerod
    user: ${FIXUID:-1420}:${FIXGID:-1420}
    volumes:
      - /ocean/services/monerod:/home/monero
    depends_on:
      - wireguard-incognito
    network_mode: service:wireguard-incognito
    restart: unless-stopped
    command: --p2p-external-port=56366 --rpc-restricted-bind-ip=0.0.0.0  --rpc-restricted-bind-port=18089 --no-igd --no-zmq --enable-dns-blocklist
    healthcheck:
      test: curl --fail http://localhost:18081/get_info || exit 1
      interval: 30s
      retries: 10
      start_period: 10m
      timeout: 30s
    labels:
      - "dependheal.enable=true"
      - "dependheal.parent=wireguard-incognito"

  libreddit:
    container_name: libreddit
    image: docker.io/libreddit/libreddit:latest
    restart: unless-stopped
    networks:
      - incognito
    depends_on:
      - wireguard-incognito
    network_mode: service:wireguard-incognito
    healthcheck:
      test: wget -qO- --no-verbose --tries=1 0.0.0.0:8080 || exit 1
      interval: 30s
      retries: 10
      start_period: 10s
      timeout: 2s
    labels:
      - "dependheal.enable=true"
      - "dependheal.parent=wireguard-incognito"

  piped-frontend:
    image: docker.io/1337kavin/piped-frontend:latest
    container_name: piped-frontend
    restart: unless-stopped
    depends_on:
      - piped-backend
    entrypoint: ash -c 'sed -i s/pipedapi.kavin.rocks/pipedapi.bspwr.com/g /usr/share/nginx/html/assets/* && /docker-entrypoint.sh && nginx -g "daemon off;"'
    networks:
      - incognito
  
  piped-proxy:
    image: docker.io/1337kavin/piped-proxy:latest
    container_name: piped-proxy
    restart: unless-stopped
    environment:
      - UDS=1
    volumes:
      - /services/incognito/piped-proxy:/app/socket
    networks:
      - incognito

  piped-backend:
    image: docker.io/1337kavin/piped:latest
    container_name: piped-backend
    restart: unless-stopped
    volumes:
      - ./piped/config.properties:/app/config.properties:ro
    depends_on:
      - piped-postgres
    networks:
      - incognito

  piped-postgres:
    image: docker.io/postgres:13-alpine
    container_name: piped-postgres
    restart: unless-stopped
    volumes:
      - /services/incognito/piped-postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=piped
      - POSTGRES_USER=piped
      - POSTGRES_PASSWORD=piped
    networks:
      - incognito

  piped-nginx:
    image: docker.io/nginx:mainline-alpine
    container_name: piped-nginx
    restart: unless-stopped
    volumes:
      - ./piped/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./piped/pipedapi.conf:/etc/nginx/conf.d/pipedapi.conf:ro
      - ./piped/pipedproxy.conf:/etc/nginx/conf.d/pipedproxy.conf:ro
      - ./piped/pipedfrontend.conf:/etc/nginx/conf.d/pipedfrontend.conf:ro
      - ./piped/ytproxy.conf:/etc/nginx/snippets/ytproxy.conf:ro
      - /services/incognito/piped-proxy:/var/run/ytproxy
    depends_on:
      - piped-backend
      - piped-proxy
      - piped-frontend
    networks:
      - incognito
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=incognito"
      - "traefik.http.routers.piped.rule=Host(`piped.bspwr.com`) || Host(`pipedapi.bspwr.com`) || Host(`pipedproxy.bspwr.com`)"
      - "traefik.http.routers.piped.entrypoints=websecure"
      - "traefik.http.routers.piped.tls=true"
      - "traefik.http.routers.piped.tls.certresolver=letsencrypt"
      - "traefik.http.routers.piped.service=piped"
      - "traefik.http.routers.piped.middlewares=default@file"
      - "traefik.http.services.piped.loadbalancer.server.port=80"

  metube:
    image: ghcr.io/alexta69/metube
    container_name: metube
    restart: unless-stopped
    environment:
      - UID=1420
      - GID=1420
      - DOWNLOAD_DIR=/metube
    volumes:
      - /ocean/downloads/metube:/metube
    networks:
      - incognito
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=incognito"
      - "traefik.http.routers.metube.rule=Host(`metube.bspwr.com`)"
      - "traefik.http.routers.metube.entrypoints=websecure"
      - "traefik.http.routers.metube.tls=true"
      - "traefik.http.routers.metube.tls.certresolver=letsencrypt"
      - "traefik.http.routers.metube.service=metube"
      - "traefik.http.routers.metube.middlewares=default@file"
      - "traefik.http.services.metube.loadbalancer.server.port=8081"

  nitter: # 8080
    image: docker.io/zedeus/nitter:latest
    container_name: nitter
    volumes:
      - /services/incognito/nitter/nitter.conf:/src/nitter.conf:ro
    depends_on:
      - nitter-redis
    restart: unless-stopped
    networks:
      - incognito
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:8080/Jack/status/20 || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=incognito"
      - "traefik.http.routers.nitter.rule=Host(`nitter.bspwr.com`)"
      - "traefik.http.routers.nitter.entrypoints=websecure"
      - "traefik.http.routers.nitter.tls=true"
      - "traefik.http.routers.nitter.tls.certresolver=letsencrypt"
      - "traefik.http.routers.nitter.service=nitter"
      - "traefik.http.routers.nitter.middlewares=default@file"
      - "traefik.http.services.nitter.loadbalancer.server.port=8080"

  nitter-redis:
    image: docker.io/redis:6.2.5-alpine
    container_name: nitter-redis
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - /services/incognito/nitter-redis:/data
    restart: unless-stopped
    networks:
      - incognito
    healthcheck:
      test: redis-cli ping
      interval: 30s
      timeout: 5s
      retries: 5

  quetre:
    container_name: quetre
    image: codeberg.org/video-prize-ranch/quetre:latest
    restart: unless-stopped
    environment:
      - "NODE_ENV=production"
      - "PORT=7070"
    depends_on:
      - wireguard-incognito
    network_mode: service:wireguard-incognito
    healthcheck:
      test: wget -qO- --no-verbose --tries=1 localhost:7070 || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
    labels:
      - "dependheal.enable=true"
      - "dependheal.parent=wireguard-incognito"

  rimgo:
    container_name: rimgo
    image: codeberg.org/video-prize-ranch/rimgo
    environment:
      - "PORT=6060"
    restart: unless-stopped
    depends_on:
      - wireguard-incognito
    network_mode: service:wireguard-incognito
    labels:
      - "dependheal.enable=true"
      - "dependheal.parent=wireguard-incognito"

  proxitok: # 80
    container_name: proxitok
    image: ghcr.io/pablouser1/proxitok:master
    environment:
      - LATTE_CACHE=/cache
      - API_CACHE=redis
      - REDIS_HOST=proxitok-redis
      - REDIS_PORT=6379
      - API_SIGNER=remote
      - API_SIGNER_URL=http://proxitok-signer:8080/signature
      - PROXY_HOST=http://wireguard-incognito
      - PROXY_PORT=8118
    depends_on:
      - proxitok-redis
      - proxitok-signer
    networks:
      - incognito
    restart: unless-stopped
    healthcheck:
      test: curl --fail localhost:80 || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=incognito"
      - "traefik.http.routers.proxitok.rule=Host(`proxitok.bspwr.com`)"
      - "traefik.http.routers.proxitok.entrypoints=websecure"
      - "traefik.http.routers.proxitok.tls=true"
      - "traefik.http.routers.proxitok.tls.certresolver=letsencrypt"
      - "traefik.http.routers.proxitok.service=proxitok"
      - "traefik.http.routers.proxitok.middlewares=default@file"
      - "traefik.http.services.proxitok.loadbalancer.server.port=80"

  proxitok-redis:
    container_name: proxitok-redis
    image: docker.io/redis:7-alpine
    command: redis-server --save 60 1 --loglevel warning
    restart: unless-stopped
    volumes:
      - /services/incognito/proxitok/redis:/data
    networks:
      - incognito
    healthcheck:
      test: redis-cli ping
      interval: 30s
      timeout: 5s
      retries: 5

  proxitok-signer:
    container_name: proxitok-signer
    image: ghcr.io/pablouser1/signtok:master
    restart: unless-stopped
    networks:
      - incognito

  searxng:
    container_name: searxng
    image: docker.io/searxng/searxng:latest
    restart: unless-stopped
    networks:
      - incognito
    volumes:
      - /services/incognito/searxng:/etc/searxng
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=incognito"
      - "traefik.http.routers.searxng.rule=Host(`search.bspwr.com`)"
      - "traefik.http.routers.searxng.entrypoints=websecure"
      - "traefik.http.routers.searxng.tls=true"
      - "traefik.http.routers.searxng.tls.certresolver=letsencrypt"
      - "traefik.http.routers.searxng.service=searxng"
      - "traefik.http.routers.searxng.middlewares=default@file"
      - "traefik.http.services.searxng.loadbalancer.server.port=8080"

  searxng-redis:
    container_name: searxng-redis
    restart: unless-stopped
    image: docker.io/redis:alpine
    command: redis-server --save "" --appendonly "no"
    networks:
      - incognito
    tmpfs:
      - /var/lib/redis
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE

networks:
  incognito:
    name: incognito
    external: true